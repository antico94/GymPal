{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodeCool\\\\TW3\\\\Test\\\\Test\\\\client-app\\\\src\\\\components\\\\Selects\\\\IndianaCustomSelect.js\";\nimport React from 'react';\nimport Select from 'react-select'; // const customStyles = {\n//     menu: (provided, state) => ({\n//       ...provided,\n//       width: state.selectProps.width,\n//       borderBottom: '1px dotted pink',\n//       // color: state.selectProps.menuColor,\n//       padding: 10,\n//       backgroundColor:'rgba(100,100,50,0.8)'\n//     }),\n//\n//     control: (_, { selectProps: { width }}) => ({\n//       width: width\n//     }),\n//   singleValue: (provided, state) => {\n//     const opacity = state.isDisabled ? 0.5 : 1;\n//     const transition = 'opacity 300ms';\n//\n//     return { ...provided, opacity, transition };\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomSelect(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      isMulti: props.isMulti // options={options}\n      ,\n      onChange: props.onChange,\n      defaultValue: props.defaultValue,\n      options: props.selectedOption.length === props.maxOptions ? [] : props.options,\n      noOptionsMessage: () => {\n        return props.selectedOption.length === props.maxOptions ? 'You have reached the max options value' : 'No options available';\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n}\n\n_c = CustomSelect;\nexport default CustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["D:/CodeCool/TW3/Test/Test/client-app/src/components/Selects/IndianaCustomSelect.js"],"names":["React","Select","CustomSelect","props","isMulti","onChange","defaultValue","selectedOption","length","maxOptions","options"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,sBAAO;AAAA,2BAGH,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,KAAK,CAACC,OAAvB,CACI;AADJ;AAEQ,MAAA,QAAQ,EAAED,KAAK,CAACE,QAFxB;AAGQ,MAAA,YAAY,EAAEF,KAAK,CAACG,YAH5B;AAIQ,MAAA,OAAO,EAAEH,KAAK,CAACI,cAAN,CAAqBC,MAArB,KAAgCL,KAAK,CAACM,UAAtC,GAAmD,EAAnD,GAAwDN,KAAK,CAACO,OAJ/E;AAKQ,MAAA,gBAAgB,EAAE,MAAM;AACpB,eAAOP,KAAK,CAACI,cAAN,CAAqBC,MAArB,KAAgCL,KAAK,CAACM,UAAtC,GACD,wCADC,GAED,sBAFN;AAGH;AATT;AAAA;AAAA;AAAA;AAAA;AAHG;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH;;KAfQP,Y;AAiBT,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\n// const customStyles = {\r\n//     menu: (provided, state) => ({\r\n//       ...provided,\r\n//       width: state.selectProps.width,\r\n//       borderBottom: '1px dotted pink',\r\n//       // color: state.selectProps.menuColor,\r\n//       padding: 10,\r\n//       backgroundColor:'rgba(100,100,50,0.8)'\r\n//     }),\r\n//\r\n//     control: (_, { selectProps: { width }}) => ({\r\n//       width: width\r\n//     }),\r\n\r\n//   singleValue: (provided, state) => {\r\n//     const opacity = state.isDisabled ? 0.5 : 1;\r\n//     const transition = 'opacity 300ms';\r\n//\r\n//     return { ...provided, opacity, transition };\r\n//   }\r\n// }\r\n\r\n\r\nfunction CustomSelect(props) {\r\n    return <div\r\n        // style={style}\r\n    >\r\n        <Select isMulti={props.isMulti}\r\n            // options={options}\r\n                onChange={props.onChange}\r\n                defaultValue={props.defaultValue}\r\n                options={props.selectedOption.length === props.maxOptions ? [] : props.options}\r\n                noOptionsMessage={() => {\r\n                    return props.selectedOption.length === props.maxOptions\r\n                        ? 'You have reached the max options value'\r\n                        : 'No options available';\r\n                }}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;\r\n"]},"metadata":{},"sourceType":"module"}