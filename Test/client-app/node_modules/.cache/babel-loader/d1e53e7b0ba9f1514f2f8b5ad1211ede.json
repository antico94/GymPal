{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodeCool\\\\TW3\\\\Test\\\\Test\\\\client-app\\\\src\\\\components\\\\Selects\\\\MuscleSelect.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CreatableSelect from \"react-select\";\nimport { components } from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animatedComponents = makeAnimated();\n\nconst Menu = props => {\n  const optionSelectedLength = props.getValue().length || 0;\n  return /*#__PURE__*/_jsxDEV(components.Menu, { ...props,\n    children: optionSelectedLength < 5 ? props.children : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 15\n      },\n      children: \"Max limit achieved\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 61\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Menu;\n\nfunction MuscleMultiSelect(props) {\n  _s();\n\n  // debugger;\n  const isValidNewOption = (inputValue, selectValue) => inputValue.length > 0 && selectValue.length < 5;\n\n  const [values, setValues] = useState([{\n    value: 2,\n    label: 'Deltoids'\n  }, {\n    value: 3,\n    label: 'Sex'\n  }]); // const [values, setValues] = useState([\"laba\", \"sex\"])\n\n  const changeHandler = e => {\n    console.log(\"The Event is: \");\n    console.log(e);\n    console.log();\n    console.log();\n    console.log();\n    console.log(\"The Values before setValue are: \" + values);\n    console.log(values);\n    console.log();\n    console.log();\n    console.log();\n    setValues(values, e);\n    console.log(\"The Values after setValue are: \");\n    console.log(values);\n    console.log();\n    console.log();\n    console.log(); // setTimeout(function () {\n    //     console.log(\"VALUES:\" + [...values[0]])\n    // }, 1000);\n    // setValues([...values, e.target.value]);\n\n    props.onChange(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CreatableSelect, {\n      components: {\n        Menu,\n        animatedComponents\n      },\n      isValidNewOption: isValidNewOption,\n      isMulti: props.isMulti,\n      onChange: changeHandler,\n      options: props.options,\n      value: values\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n}\n\n_s(MuscleMultiSelect, \"QalScfS2+06qRBIvzlpP1x4BXQE=\");\n\n_c2 = MuscleMultiSelect;\nexport default MuscleMultiSelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Menu\");\n$RefreshReg$(_c2, \"MuscleMultiSelect\");","map":{"version":3,"sources":["D:/CodeCool/TW3/Test/Test/client-app/src/components/Selects/MuscleSelect.js"],"names":["React","CreatableSelect","components","makeAnimated","useState","animatedComponents","Menu","props","optionSelectedLength","getValue","length","children","margin","MuscleMultiSelect","isValidNewOption","inputValue","selectValue","values","setValues","value","label","changeHandler","e","console","log","onChange","isMulti","options"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,kBAAkB,GAAGF,YAAY,EAAvC;;AAEA,MAAMG,IAAI,GAAGC,KAAK,IAAI;AAClB,QAAMC,oBAAoB,GAAGD,KAAK,CAACE,QAAN,GAAiBC,MAAjB,IAA2B,CAAxD;AACA,sBAAQ,QAAC,UAAD,CAAY,IAAZ,OAAqBH,KAArB;AAAA,cACCC,oBAAoB,GAAG,CAAvB,GAA4BD,KAAK,CAACI,QAAlC,gBAA+C;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADhD;AAAA;AAAA;AAAA;AAAA,UAAR;AAGH,CALD;;KAAMN,I;;AAON,SAASO,iBAAT,CAA2BN,KAA3B,EAAkC;AAAA;;AAC9B;AACA,QAAMO,gBAAgB,GAAG,CAACC,UAAD,EAAaC,WAAb,KAA6BD,UAAU,CAACL,MAAX,GAAoB,CAApB,IAAyBM,WAAW,CAACN,MAAZ,GAAqB,CAApG;;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAC;AAACe,IAAAA,KAAK,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAD,EAAgC;AAACD,IAAAA,KAAK,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAhC,CAAD,CAApC,CAH8B,CAI9B;;AACA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCP,MAAjD;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR;AACAN,IAAAA,SAAS,CAACD,MAAD,EAASK,CAAT,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR,GAhByB,CAkBzB;AACA;AACA;AACA;;AAEAjB,IAAAA,KAAK,CAACkB,QAAN,CAAeH,CAAf;AACH,GAxBD;;AAyBA,sBAAQ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA,QAAC,eAAD;AACI,MAAA,UAAU,EAAE;AAAChB,QAAAA,IAAD;AAAOD,QAAAA;AAAP,OADhB;AAEI,MAAA,gBAAgB,EAAES,gBAFtB;AAGI,MAAA,OAAO,EAAEP,KAAK,CAACmB,OAHnB;AAII,MAAA,QAAQ,EAAEL,aAJd;AAKI,MAAA,OAAO,EAAEd,KAAK,CAACoB,OALnB;AAMI,MAAA,KAAK,EAAEV;AANX;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAAR;AAUH;;GAxCQJ,iB;;MAAAA,iB;AA2CT,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\r\nimport CreatableSelect from \"react-select\";\r\nimport {components} from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport {useState} from \"react\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst Menu = props => {\r\n    const optionSelectedLength = props.getValue().length || 0;\r\n    return (<components.Menu {...props}>\r\n            {optionSelectedLength < 5 ? (props.children) : (<div style={{margin: 15}}>Max limit achieved</div>)}\r\n        </components.Menu>);\r\n};\r\n\r\nfunction MuscleMultiSelect(props) {\r\n    // debugger;\r\n    const isValidNewOption = (inputValue, selectValue) => inputValue.length > 0 && selectValue.length < 5;\r\n    const [values, setValues] = useState([{value: 2, label: 'Deltoids'}, {value: 3, label: 'Sex'}])\r\n    // const [values, setValues] = useState([\"laba\", \"sex\"])\r\n    const changeHandler = (e) => {\r\n        console.log(\"The Event is: \")\r\n        console.log(e)\r\n        console.log()\r\n        console.log()\r\n        console.log()\r\n        console.log(\"The Values before setValue are: \" + values)\r\n        console.log(values)\r\n        console.log()\r\n        console.log()\r\n        console.log()\r\n        setValues(values, e);\r\n        console.log(\"The Values after setValue are: \")\r\n        console.log(values)\r\n        console.log()\r\n        console.log()\r\n        console.log()\r\n\r\n        // setTimeout(function () {\r\n        //     console.log(\"VALUES:\" + [...values[0]])\r\n        // }, 1000);\r\n        // setValues([...values, e.target.value]);\r\n\r\n        props.onChange(e)\r\n    }\r\n    return (<div className=\"App\">\r\n            <CreatableSelect\r\n                components={{Menu, animatedComponents}}\r\n                isValidNewOption={isValidNewOption}\r\n                isMulti={props.isMulti}\r\n                onChange={changeHandler}\r\n                options={props.options}\r\n                value={values}\r\n            />\r\n        </div>);\r\n}\r\n\r\n\r\nexport default MuscleMultiSelect\r\n\r\n"]},"metadata":{},"sourceType":"module"}