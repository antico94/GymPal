{"ast":null,"code":"// import React, {Component} from \"react\";\n// import {variables} from \"../Variables\";\n//\n// export class Exercise extends Component {\n//     constructor(props) {\n//         super(props);\n//\n//         this.state = {\n//             muscles: [], thisTitle: \"NotChanging\", Name: \"\", selectedOption: 0, Id, exercises: []\n//         }\n//     }\n//\n//     refreshList() {\n//         fetch(variables.EXERCISE_API_URL)\n//             .then(response => response.json())\n//             .then(data => this.setState({exercises: data}))\n//     }\n//\n//     componentDidMount() {\n//         this.refreshList();\n//     }\n//\n//     changeMuscleName = (e) => {\n//         this.setState({Name: e.target.value});\n//     }\n//\n//     changeSelected = (e) => {\n//         this.setState({selectedOption: e.target.value});\n//     }\n//\n//     addClick() {\n//         this.setState({\n//             thisTitle: \"Add Muscle\", Id: 0, Name: \"\"\n//         });\n//     }\n//\n//     editClick(muscle) {\n//         this.setState({\n//             thisTitle: \"Edit Muscle\", Id: muscle.Id, Name: muscle.Name\n//         });\n//     }\n//\n//     createClick() {\n//\n//         fetch(variables.MUSCLE_API_URL, {\n//             method: 'POST', headers: {\n//                 'Accept': 'application/json', 'Content-Type': 'application/json'\n//             }, body: JSON.stringify({\n//                 Name: this.state.Name, Category: this.state.selectedOption\n//             })\n//         })\n//             .then(res => res.json())\n//             .then((result) => {\n//                 console.log(result)\n//                 this.refreshList()\n//             }, (error) => {\n//                 console.log(error)\n//                 this.refreshList()\n//             })\n//\n//     }\n//\n//\n//     updateClick() {\n//         fetch(variables.MUSCLE_API_URL + \"/\" + this.state.Id, {\n//             method: 'PUT', headers: {\n//                 'Accept': 'application/json', 'Content-Type': 'application/json'\n//             }, body: JSON.stringify({\n//                 Id: this.state.Id, Name: this.state.Name, Category: this.state.selectedOption\n//             })\n//         })\n//             .then(res => res.json())\n//             .then((result) => {\n//                 console.log(\"Succes MDF \" + result)\n//                 this.refreshList()\n//             }, (error) => {\n//                 this.refreshList()\n//                 console.log(\"eRROR MDF \" + error)\n//             })\n//     }\n//\n//\n//     deleteClick(id) {\n//         if (window.confirm(\"Are you sure?\")) {\n//             fetch(variables.MUSCLE_API_URL + \"/\" + id, {\n//                 method: 'DELETE', headers: {\n//                     'Accept': 'application/json', 'Content-Type': 'application/json'\n//                 }\n//             })\n//                 .then(res => res.json())\n//                 .then((result) => {\n//                     console.log(\"Succes MDF \" + result)\n//                     this.refreshList()\n//                 }, (error) => {\n//                     this.refreshList()\n//                     console.log(\"eRROR MDF \" + error)\n//                 })\n//         }\n//     }\n//\n//     render() {\n//         const {\n//             muscles, Id, thisTitle, Name\n//         } = this.state\n//         const Category = {\n//             0: \"Arms\", 1: \"Back\", 2: \"Core\", 3: \"Legs\"\n//         }\n//         return (\n//\n//             <div>\n//                 <button type=\"button\"\n//                         className=\"btn btn-primary m-2 float-end\"\n//                         data-bs-toggle=\"modal\"\n//                         data-bs-target=\"#exampleModal\"\n//                         onClick={() => this.addClick()}>\n//                     Add Muscle\n//                 </button>\n//                 <h3 className=\"d-flex justify-content-center m-3\">Muscle Page</h3>\n//                 <table className=\"table table-striped\">\n//                     <thead>\n//                     <tr>\n//                         <th>\n//                             ID\n//                         </th>\n//                         <th>\n//                             Name\n//                         </th>\n//                         <th>\n//                             Category\n//                         </th>\n//                     </tr>\n//                     </thead>\n//                     <tbody>\n//                     {muscles.map(mus => <tr key={mus.Id}>\n//                         <td>{mus.Id}</td>\n//                         <td>{mus.Name}</td>\n//                         <td>{Category[mus.Category]}</td>\n//                         <td>\n//                             <button type='button'\n//                                     className=\"btn btn-light mr-1\"\n//                                     data-bs-toggle=\"modal\"\n//                                     data-bs-target=\"#exampleModal\"\n//                                     onClick={() => this.editClick(mus)}>\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n//                                      className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n//                                     <path\n//                                         d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n//                                     <path fillRule=\"evenodd\"\n//                                           d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n//                                 </svg>\n//                             </button>\n//\n//                             <button type='button'\n//                                     className=\"btn btn-light mr-1\">\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n//                                      onClick={() => this.deleteClick(mus.Id)}\n//                                      className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n//\n//                                     <path\n//                                         d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\n//                                 </svg>\n//                             </button>\n//                         </td>\n//                     </tr>)}\n//                     </tbody>\n//                 </table>\n//\n//                 <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-hidden=\"true\">\n//                     <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n//                         <div className=\"modal-content\">\n//                             <div className=\"modal-header\">\n//                                 <h5 className=\"modal-title\">{thisTitle}</h5>\n//                                 <button type=\"button\"\n//                                         className=\"btn-close\"\n//                                         data-bs-dismiss=\"modal\"\n//                                         aria-label=\"Close\">\n//                                 </button>\n//                             </div>\n//                             <div className=\"modal-body\">\n//                                 <div className=\"input-group mb-3\">\n//                                     <span className=\"input-group-text\">Name</span>\n//                                     <input type=\"text\" className=\"form-control\"\n//                                            value={Name}\n//                                            onChange={this.changeMuscleName}/>\n//                                 </div>\n//\n//                                 <div className=\"input-group mb-3\">\n//                                     <span className=\"input-group-text\">Category</span>\n//                                     <select value={this.state.selectedOption} onChange={this.changeSelected}>\n//                                         {Object.entries(Category).map(([key, value]) => (\n//                                             <option key={key}>{value}</option>))}\n//                                     </select>\n//                                 </div>\n//                                 {Id === 0 ? <button type=\"button\"\n//                                                     className=\"btn btn-primary float-start\"\n//                                                     onClick={() => this.createClick()}\n//                                 >Create</button> : null}\n//\n//                                 {Id !== 0 ? <button type=\"button\"\n//                                                     onClick={() => this.updateClick()}\n//                                                     className=\"btn btn-primary float-start\">Update</button> : null}\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>)\n//     }\n// }","map":{"version":3,"sources":["D:/CodeCool/TW3/Test/Test/client-app/src/components/Exercise.js"],"names":[],"mappingssourcesContent":["// import React, {Component} from \"react\";\r\n// import {variables} from \"../Variables\";\r\n//\r\n// export class Exercise extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//\r\n//         this.state = {\r\n//             muscles: [], thisTitle: \"NotChanging\", Name: \"\", selectedOption: 0, Id, exercises: []\r\n//         }\r\n//     }\r\n//\r\n//     refreshList() {\r\n//         fetch(variables.EXERCISE_API_URL)\r\n//             .then(response => response.json())\r\n//             .then(data => this.setState({exercises: data}))\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         this.refreshList();\r\n//     }\r\n//\r\n//     changeMuscleName = (e) => {\r\n//         this.setState({Name: e.target.value});\r\n//     }\r\n//\r\n//     changeSelected = (e) => {\r\n//         this.setState({selectedOption: e.target.value});\r\n//     }\r\n//\r\n//     addClick() {\r\n//         this.setState({\r\n//             thisTitle: \"Add Muscle\", Id: 0, Name: \"\"\r\n//         });\r\n//     }\r\n//\r\n//     editClick(muscle) {\r\n//         this.setState({\r\n//             thisTitle: \"Edit Muscle\", Id: muscle.Id, Name: muscle.Name\r\n//         });\r\n//     }\r\n//\r\n//     createClick() {\r\n//\r\n//         fetch(variables.MUSCLE_API_URL, {\r\n//             method: 'POST', headers: {\r\n//                 'Accept': 'application/json', 'Content-Type': 'application/json'\r\n//             }, body: JSON.stringify({\r\n//                 Name: this.state.Name, Category: this.state.selectedOption\r\n//             })\r\n//         })\r\n//             .then(res => res.json())\r\n//             .then((result) => {\r\n//                 console.log(result)\r\n//                 this.refreshList()\r\n//             }, (error) => {\r\n//                 console.log(error)\r\n//                 this.refreshList()\r\n//             })\r\n//\r\n//     }\r\n//\r\n//\r\n//     updateClick() {\r\n//         fetch(variables.MUSCLE_API_URL + \"/\" + this.state.Id, {\r\n//             method: 'PUT', headers: {\r\n//                 'Accept': 'application/json', 'Content-Type': 'application/json'\r\n//             }, body: JSON.stringify({\r\n//                 Id: this.state.Id, Name: this.state.Name, Category: this.state.selectedOption\r\n//             })\r\n//         })\r\n//             .then(res => res.json())\r\n//             .then((result) => {\r\n//                 console.log(\"Succes MDF \" + result)\r\n//                 this.refreshList()\r\n//             }, (error) => {\r\n//                 this.refreshList()\r\n//                 console.log(\"eRROR MDF \" + error)\r\n//             })\r\n//     }\r\n//\r\n//\r\n//     deleteClick(id) {\r\n//         if (window.confirm(\"Are you sure?\")) {\r\n//             fetch(variables.MUSCLE_API_URL + \"/\" + id, {\r\n//                 method: 'DELETE', headers: {\r\n//                     'Accept': 'application/json', 'Content-Type': 'application/json'\r\n//                 }\r\n//             })\r\n//                 .then(res => res.json())\r\n//                 .then((result) => {\r\n//                     console.log(\"Succes MDF \" + result)\r\n//                     this.refreshList()\r\n//                 }, (error) => {\r\n//                     this.refreshList()\r\n//                     console.log(\"eRROR MDF \" + error)\r\n//                 })\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         const {\r\n//             muscles, Id, thisTitle, Name\r\n//         } = this.state\r\n//         const Category = {\r\n//             0: \"Arms\", 1: \"Back\", 2: \"Core\", 3: \"Legs\"\r\n//         }\r\n//         return (\r\n//\r\n//             <div>\r\n//                 <button type=\"button\"\r\n//                         className=\"btn btn-primary m-2 float-end\"\r\n//                         data-bs-toggle=\"modal\"\r\n//                         data-bs-target=\"#exampleModal\"\r\n//                         onClick={() => this.addClick()}>\r\n//                     Add Muscle\r\n//                 </button>\r\n//                 <h3 className=\"d-flex justify-content-center m-3\">Muscle Page</h3>\r\n//                 <table className=\"table table-striped\">\r\n//                     <thead>\r\n//                     <tr>\r\n//                         <th>\r\n//                             ID\r\n//                         </th>\r\n//                         <th>\r\n//                             Name\r\n//                         </th>\r\n//                         <th>\r\n//                             Category\r\n//                         </th>\r\n//                     </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                     {muscles.map(mus => <tr key={mus.Id}>\r\n//                         <td>{mus.Id}</td>\r\n//                         <td>{mus.Name}</td>\r\n//                         <td>{Category[mus.Category]}</td>\r\n//                         <td>\r\n//                             <button type='button'\r\n//                                     className=\"btn btn-light mr-1\"\r\n//                                     data-bs-toggle=\"modal\"\r\n//                                     data-bs-target=\"#exampleModal\"\r\n//                                     onClick={() => this.editClick(mus)}>\r\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n//                                      className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n//                                     <path\r\n//                                         d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n//                                     <path fillRule=\"evenodd\"\r\n//                                           d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n//                                 </svg>\r\n//                             </button>\r\n//\r\n//                             <button type='button'\r\n//                                     className=\"btn btn-light mr-1\">\r\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n//                                      onClick={() => this.deleteClick(mus.Id)}\r\n//                                      className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\r\n//\r\n//                                     <path\r\n//                                         d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\r\n//                                 </svg>\r\n//                             </button>\r\n//                         </td>\r\n//                     </tr>)}\r\n//                     </tbody>\r\n//                 </table>\r\n//\r\n//                 <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-hidden=\"true\">\r\n//                     <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n//                         <div className=\"modal-content\">\r\n//                             <div className=\"modal-header\">\r\n//                                 <h5 className=\"modal-title\">{thisTitle}</h5>\r\n//                                 <button type=\"button\"\r\n//                                         className=\"btn-close\"\r\n//                                         data-bs-dismiss=\"modal\"\r\n//                                         aria-label=\"Close\">\r\n//                                 </button>\r\n//                             </div>\r\n//                             <div className=\"modal-body\">\r\n//                                 <div className=\"input-group mb-3\">\r\n//                                     <span className=\"input-group-text\">Name</span>\r\n//                                     <input type=\"text\" className=\"form-control\"\r\n//                                            value={Name}\r\n//                                            onChange={this.changeMuscleName}/>\r\n//                                 </div>\r\n//\r\n//                                 <div className=\"input-group mb-3\">\r\n//                                     <span className=\"input-group-text\">Category</span>\r\n//                                     <select value={this.state.selectedOption} onChange={this.changeSelected}>\r\n//                                         {Object.entries(Category).map(([key, value]) => (\r\n//                                             <option key={key}>{value}</option>))}\r\n//                                     </select>\r\n//                                 </div>\r\n//                                 {Id === 0 ? <button type=\"button\"\r\n//                                                     className=\"btn btn-primary float-start\"\r\n//                                                     onClick={() => this.createClick()}\r\n//                                 >Create</button> : null}\r\n//\r\n//                                 {Id !== 0 ? <button type=\"button\"\r\n//                                                     onClick={() => this.updateClick()}\r\n//                                                     className=\"btn btn-primary float-start\">Update</button> : null}\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>)\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}