{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodeCool\\\\TW3\\\\Test\\\\Test\\\\client-app\\\\src\\\\components\\\\Selects\\\\FixedOptionsMuscle.js\";\nimport React from 'react';\nimport CustomSelect from './CustomSelect';\nimport { variables } from \"../../Variables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  app: {\n    // backgroundColor:'rgba(0,0,0,0.1)',\n    // justifyItems:'center',\n    // alignItems:'center',\n    // display:'grid',\n    height: '1vh',\n    // fontFamily:'Arial',\n    color: 'rgba(0,0,100,1)',\n    // gridTemplateColumns:'1fr',\n    fontSize: 15\n  },\n  select: {\n    width: '100%',\n    maxWidth: 600\n  }\n};\nfetch(variables.MUSCLE_API_URL).then(response => response.json()).then(result => result.map(function (line) {\n  console.log(line);\n  let dict = {\n    label: line.Name,\n    value: line.ID\n  };\n  options.push(dict);\n})); // const options=[\n//   {label:'React',value:'react'},\n//   {label:'ReactNative',value:'react-native'},\n//   {label:'JavaScript',value:'js'},\n//   {label:'CSS',value:'css'},\n// ]\n\nconst options = [];\n\nfunction onChangeInput(value) {\n  console.log(value);\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.app,\n    children: [console.log(options), /*#__PURE__*/_jsxDEV(CustomSelect, {\n      isMulti: true,\n      style: styles.select,\n      defaultValue: [],\n      onChange: onChangeInput,\n      options: options,\n      label: \"Choose muscles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/CodeCool/TW3/Test/Test/client-app/src/components/Selects/FixedOptionsMuscle.js"],"names":["React","CustomSelect","variables","styles","app","height","color","fontSize","select","width","maxWidth","fetch","MUSCLE_API_URL","then","response","json","result","map","line","console","log","dict","label","Name","value","ID","options","push","onChangeInput","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE;AACD;AACA;AACA;AACA;AACAC,IAAAA,MAAM,EAAE,KALP;AAMD;AACAC,IAAAA,KAAK,EAAE,iBAPN;AAQD;AACAC,IAAAA,QAAQ,EAAE;AATT,GADM;AAYXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAZG,CAAf;AAkBAC,KAAK,CAACT,SAAS,CAACU,cAAX,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAW,UAAUC,IAAV,EAAgB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIG,IAAI,GAAG;AAACC,IAAAA,KAAK,EAAEJ,IAAI,CAACK,IAAb;AAAmBC,IAAAA,KAAK,EAAEN,IAAI,CAACO;AAA/B,GAAX;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAaN,IAAb;AACH,CAJe,CAFpB,E,CAQA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,OAAO,GAAG,EAAhB;;AAEA,SAASE,aAAT,CAAuBJ,KAAvB,EAA8B;AAC1BL,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;;AAED,SAASK,GAAT,GAAe;AACX,sBACI;AAAK,IAAA,KAAK,EAAE1B,MAAM,CAACC,GAAnB;AAAA,eACKe,OAAO,CAACC,GAAR,CAAYM,OAAZ,CADL,eAEI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE,IAAvB;AAA6B,MAAA,KAAK,EAAEvB,MAAM,CAACK,MAA3C;AAAmD,MAAA,YAAY,EAAE,EAAjE;AAAqE,MAAA,QAAQ,EAAEoB,aAA/E;AACc,MAAA,OAAO,EAAEF,OADvB;AACgC,MAAA,KAAK,EAAC;AADtC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KAVQG,G;AAYT,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport CustomSelect from './CustomSelect';\r\nimport {variables} from \"../../Variables\";\r\n\r\nconst styles = {\r\n    app: {\r\n        // backgroundColor:'rgba(0,0,0,0.1)',\r\n        // justifyItems:'center',\r\n        // alignItems:'center',\r\n        // display:'grid',\r\n        height: '1vh',\r\n        // fontFamily:'Arial',\r\n        color: 'rgba(0,0,100,1)',\r\n        // gridTemplateColumns:'1fr',\r\n        fontSize: 15\r\n    },\r\n    select: {\r\n        width: '100%',\r\n        maxWidth: 600\r\n    }\r\n}\r\n\r\nfetch(variables.MUSCLE_API_URL)\r\n    .then(response => response.json())\r\n    .then(result => result.map(function (line) {\r\n        console.log(line)\r\n        let dict = {label: line.Name, value: line.ID}\r\n        options.push(dict)\r\n    }))\r\n\r\n// const options=[\r\n//   {label:'React',value:'react'},\r\n//   {label:'ReactNative',value:'react-native'},\r\n//   {label:'JavaScript',value:'js'},\r\n//   {label:'CSS',value:'css'},\r\n// ]\r\n\r\nconst options = []\r\n\r\nfunction onChangeInput(value) {\r\n    console.log(value);\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <div style={styles.app}>\r\n            {console.log(options)}\r\n            <CustomSelect isMulti={true} style={styles.select} defaultValue={[]} onChange={onChangeInput}\r\n                          options={options} label=\"Choose muscles\"/>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}