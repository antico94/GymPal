{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodeCool\\\\TW3\\\\Test\\\\Test\\\\client-app\\\\src\\\\components\\\\Selects\\\\CustomSelectTest.js\";\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animatedComponents = makeAnimated();\n\nconst ReactSelectTest = props => {\n  return /*#__PURE__*/_jsxDEV(Select, {\n    getOptionLabel: x => x.label,\n    getOptionValue: x => x.value,\n    components: animatedComponents,\n    isMulti: true,\n    options: this.props.selectedOption.length === this.props.maxOptions ? [] : this.props.data,\n    noOptionsMessage: () => {\n      return this.props.selectedOption.length === this.props.maxOptions ? 'You have reached the max options value' : 'No options available';\n    },\n    label: \"tags\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ReactSelectTest;\nexport default ReactSelectTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactSelectTest\");","map":{"version":3,"sources":["D:/CodeCool/TW3/Test/Test/client-app/src/components/Selects/CustomSelectTest.js"],"names":["React","useState","Select","makeAnimated","animatedComponents","ReactSelectTest","props","x","label","value","selectedOption","length","maxOptions","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,kBAAkB,GAAGD,YAAY,EAAvC;;AAEA,MAAME,eAAe,GAAIC,KAAD,IAAW;AAE/B,sBACI,QAAC,MAAD;AACI,IAAA,cAAc,EAAEC,CAAC,IAAIA,CAAC,CAACC,KAD3B;AAEI,IAAA,cAAc,EAAED,CAAC,IAAIA,CAAC,CAACE,KAF3B;AAGI,IAAA,UAAU,EAAEL,kBAHhB;AAII,IAAA,OAAO,MAJX;AAKI,IAAA,OAAO,EAAE,KAAKE,KAAL,CAAWI,cAAX,CAA0BC,MAA1B,KAAqC,KAAKL,KAAL,CAAWM,UAAhD,GAA6D,EAA7D,GAAkE,KAAKN,KAAL,CAAWO,IAL1F;AAMI,IAAA,gBAAgB,EAAE,MAAM;AACpB,aAAO,KAAKP,KAAL,CAAWI,cAAX,CAA0BC,MAA1B,KAAqC,KAAKL,KAAL,CAAWM,UAAhD,GACD,wCADC,GAED,sBAFN;AAGH,KAVL;AAWI,IAAA,KAAK,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhBD;;KAAMP,e;AAkBN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst ReactSelectTest = (props) => {\r\n\r\n    return (\r\n        <Select\r\n            getOptionLabel={x => x.label}\r\n            getOptionValue={x => x.value}\r\n            components={animatedComponents}\r\n            isMulti\r\n            options={this.props.selectedOption.length === this.props.maxOptions ? [] : this.props.data}\r\n            noOptionsMessage={() => {\r\n                return this.props.selectedOption.length === this.props.maxOptions\r\n                    ? 'You have reached the max options value'\r\n                    : 'No options available';\r\n            }}\r\n            label='tags'\r\n        />)\r\n}\r\n\r\nexport default ReactSelectTest;"]},"metadata":{},"sourceType":"module"}