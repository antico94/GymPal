{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodeCool\\\\TW3\\\\Test\\\\Test\\\\client-app\\\\src\\\\components\\\\Selects\\\\IndianaCustomSelect.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomSelect(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      isMulti: props.isMulti,\n      onChange: props.onChange,\n      defaultValue: props.defaultValue,\n      options: props.selectedOption.length === 3 ? [] : props.options,\n      noOptionsMessage: () => {\n        return props.selectedOption.length === 3 ? 'You have reached the max options value' : 'No options available';\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n\n_c = CustomSelect;\nexport default CustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["D:/CodeCool/TW3/Test/Test/client-app/src/components/Selects/IndianaCustomSelect.js"],"names":["React","Select","CustomSelect","props","isMulti","onChange","defaultValue","selectedOption","length","options"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,sBAAO;AAAA,2BACH,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,KAAK,CAACC,OAAvB;AACQ,MAAA,QAAQ,EAAED,KAAK,CAACE,QADxB;AAEQ,MAAA,YAAY,EAAEF,KAAK,CAACG,YAF5B;AAGQ,MAAA,OAAO,EAAEH,KAAK,CAACI,cAAN,CAAqBC,MAArB,KAAgC,CAAhC,GAAoC,EAApC,GAAyCL,KAAK,CAACM,OAHhE;AAIQ,MAAA,gBAAgB,EAAE,MAAM;AACpB,eAAON,KAAK,CAACI,cAAN,CAAqBC,MAArB,KAAgC,CAAhC,GACD,wCADC,GAED,sBAFN;AAGH;AART;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAWH;;KAZQN,Y;AAcT,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nfunction CustomSelect(props) {\r\n    return <div>\r\n        <Select isMulti={props.isMulti}\r\n                onChange={props.onChange}\r\n                defaultValue={props.defaultValue}\r\n                options={props.selectedOption.length === 3 ? [] : props.options}\r\n                noOptionsMessage={() => {\r\n                    return props.selectedOption.length === 3\r\n                        ? 'You have reached the max options value'\r\n                        : 'No options available';\r\n                }}/>\r\n    </div>\r\n}\r\n\r\nexport default CustomSelect;\r\n"]},"metadata":{},"sourceType":"module"}