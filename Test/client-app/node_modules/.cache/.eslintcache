[{"D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\index.js":"1","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\App.js":"2","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\reportWebVitals.js":"3","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Muscle.js":"4","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Home.js":"5","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Exercise.js":"6","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Nav.js":"7","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\Variables.js":"8","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Selects\\FixedOptionsMuscle.js":"9","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Selects\\CustomSelect.js":"10","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Selects\\FetchOptions.js":"11"},{"size":500,"mtime":1639490904336,"results":"12","hashOfConfig":"13"},{"size":682,"mtime":1639529365446,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1639490904436,"results":"15","hashOfConfig":"13"},{"size":8896,"mtime":1639529345581,"results":"16","hashOfConfig":"13"},{"size":256,"mtime":1639502352567,"results":"17","hashOfConfig":"13"},{"size":10084,"mtime":1639577049303,"results":"18","hashOfConfig":"13"},{"size":1518,"mtime":1639493989009,"results":"19","hashOfConfig":"13"},{"size":208,"mtime":1639506966390,"results":"20","hashOfConfig":"13"},{"size":972,"mtime":1639576997759,"results":"21","hashOfConfig":"13"},{"size":832,"mtime":1639575914200,"results":"22","hashOfConfig":"13"},{"size":398,"mtime":1639576499443,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"otu9z6",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\index.js",[],["51","52"],"D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\App.js",[],"D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\reportWebVitals.js",[],"D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Muscle.js",["53"],"ï»¿import React, {Component} from \"react\";\r\nimport {variables} from \"../Variables\";\r\n\r\nexport class Muscle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            muscles: [], thisTitle: \"NotChanging\", Name: \"\", selectedOption: 0\r\n        }\r\n    }\r\n\r\n    refreshList() {\r\n        fetch(variables.MUSCLE_API_URL)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({muscles: data}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList();\r\n    }\r\n\r\n    changeMuscleName = (e) => {\r\n        this.setState({Name: e.target.value});\r\n    }\r\n\r\n    changeSelected = (e) => {\r\n        this.setState({selectedOption: e.target.value});\r\n    }\r\n\r\n    addClick() {\r\n        this.setState({\r\n            thisTitle: \"Add Muscle\", Id: 0, Name: \"\"\r\n        });\r\n    }\r\n\r\n    editClick(muscle) {\r\n        this.setState({\r\n            thisTitle: \"Edit Muscle\", Id: muscle.Id, Name: muscle.Name\r\n        });\r\n    }\r\n\r\n    createClick() {\r\n\r\n        fetch(variables.MUSCLE_API_URL, {\r\n            method: 'POST', headers: {\r\n                'Accept': 'application/json', 'Content-Type': 'application/json'\r\n            }, body: JSON.stringify({\r\n                Name: this.state.Name, Category: this.state.selectedOption\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                this.refreshList()\r\n            }, (error) => {\r\n                console.log(error)\r\n                this.refreshList()\r\n            })\r\n\r\n    }\r\n\r\n\r\n    updateClick() {\r\n        fetch(variables.MUSCLE_API_URL + \"/\" + this.state.Id, {\r\n            method: 'PUT', headers: {\r\n                'Accept': 'application/json', 'Content-Type': 'application/json'\r\n            }, body: JSON.stringify({\r\n                Id: this.state.Id, Name: this.state.Name, Category: this.state.selectedOption\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                console.log(\"Succes MDF \" + result)\r\n                this.refreshList()\r\n            }, (error) => {\r\n                this.refreshList()\r\n                console.log(\"eRROR MDF \" + error)\r\n            })\r\n    }\r\n\r\n\r\n    deleteClick(id) {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            fetch(variables.MUSCLE_API_URL + \"/\" + id, {\r\n                method: 'DELETE', headers: {\r\n                    'Accept': 'application/json', 'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    console.log(\"Succes MDF \" + result)\r\n                    this.refreshList()\r\n                }, (error) => {\r\n                    this.refreshList()\r\n                    console.log(\"eRROR MDF \" + error)\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            muscles, Id, thisTitle, Name\r\n        } = this.state\r\n        const Category = {\r\n            0: \"Arms\", 1: \"Back\", 2: \"Core\", 3: \"Legs\"\r\n        }\r\n        return (\r\n\r\n            <div>\r\n                <button type=\"button\"\r\n                        className=\"btn btn-primary m-2 float-end\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#exampleModal\"\r\n                        onClick={() => this.addClick()}>\r\n                    Add Muscle\r\n                </button>\r\n                <h3 className=\"d-flex justify-content-center m-3\">Muscle Page</h3>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>\r\n                            ID\r\n                        </th>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th>\r\n                            Category\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {muscles.map(mus => <tr key={mus.Id}>\r\n                        <td>{mus.Id}</td>\r\n                        <td>{mus.Name}</td>\r\n                        <td>{Category[mus.Category]}</td>\r\n                        <td>\r\n                            <button type='button'\r\n                                    className=\"btn btn-light mr-1\"\r\n                                    data-bs-toggle=\"modal\"\r\n                                    data-bs-target=\"#exampleModal\"\r\n                                    onClick={() => this.editClick(mus)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                     className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                    <path\r\n                                        d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n                                    <path fillRule=\"evenodd\"\r\n                                          d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n                                </svg>\r\n                            </button>\r\n\r\n                            <button type='button'\r\n                                    className=\"btn btn-light mr-1\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                     onClick={() => this.deleteClick(mus.Id)}\r\n                                     className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\r\n\r\n                                    <path\r\n                                        d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\r\n                                </svg>\r\n                            </button>\r\n                        </td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">{thisTitle}</h5>\r\n                                <button type=\"button\"\r\n                                        className=\"btn-close\"\r\n                                        data-bs-dismiss=\"modal\"\r\n                                        aria-label=\"Close\">\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\">Name</span>\r\n                                    <input type=\"text\" className=\"form-control\"\r\n                                           value={Name}\r\n                                           onChange={this.changeMuscleName}/>\r\n                                </div>\r\n\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\">Category</span>\r\n                                    <select value={this.state.selectedOption} onChange={this.changeSelected}>\r\n                                        {Object.entries(Category).map(([key, value]) => (\r\n                                            <option key={key}>{value}</option>))}\r\n                                    </select>\r\n                                </div>\r\n                                {Id === 0 ? <button type=\"button\"\r\n                                                    className=\"btn btn-primary float-start\"\r\n                                                    onClick={() => this.createClick()}\r\n                                >Create</button> : null}\r\n\r\n                                {Id !== 0 ? <button type=\"button\"\r\n                                                    onClick={() => this.updateClick()}\r\n                                                    className=\"btn btn-primary float-start\">Update</button> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n}","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Home.js",["54"],"ï»¿import React, {Component} from \"react\";\r\n\r\nexport class Home extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3 className=\"d-flex justify-content-center m-3\">Home Page</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Exercise.js",["55","56","57"],"D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Nav.js",["58"],"ï»¿import '../App.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm bg-light navbar-dark\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"mav-item- m-1\">\r\n                        <Link to=\"/\"><li className=\"btn btn-light btn-outline-primary\">Home</li></Link>\r\n                    </li>\r\n                    <li className=\"mav-item- m-1\">\r\n                        <Link to=\"/muscle\"><li className=\"btn btn-light btn-outline-primary\">Muscle</li></Link>\r\n                    </li>\r\n                    <li className=\"mav-item- m-1\">\r\n                        <Link to=\"/exercise\"><li className=\"btn btn-light btn-outline-primary\" >Exercise</li></Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n\r\n\r\n// import '../App.css';\r\n// import {Link} from \"react-router-dom\";\r\n//\r\n// function Nav() {\r\n//     return (\r\n//         <div>\r\n//             <nav>\r\n//                 <Link to=\"/\">\r\n//                     <h3>Home</h3>\r\n//                 </Link>\r\n//                 <ul className=\"nav-links\">\r\n//                     <li>\r\n//                         <Link to=\"/muscle\"><li>muscle</li></Link>\r\n//                         <Link to=\"/exercise\"><li>exercise</li></Link>\r\n//                     </li>\r\n//                 </ul>\r\n//             </nav>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default Nav;\r\n","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\Variables.js",["59"],"ï»¿export const variables = {\r\n    MUSCLE_API_URL : \"https://localhost:7056/api/Muscle\",\r\n    Task_API_URL : \"https://localhost:7056/api/Task\",\r\n    EXERCISE_API_URL : \"https://localhost:7056/api/Exercise\"\r\n}","D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Selects\\FixedOptionsMuscle.js",["60"],"D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Selects\\CustomSelect.js",[],"D:\\CodeCool\\TW3\\Test\\Test\\client-app\\src\\components\\Selects\\FetchOptions.js",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"70"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"71"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"72"},{"ruleId":"73","severity":1,"message":"74","line":108,"column":13,"nodeType":"75","messageId":"76","endLine":108,"endColumn":20},{"ruleId":"73","severity":1,"message":"77","line":108,"column":54,"nodeType":"75","messageId":"76","endLine":108,"endColumn":68},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"78"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","messageId":"69","fix":"79"},{"ruleId":"73","severity":1,"message":"80","line":3,"column":9,"nodeType":"75","messageId":"76","endLine":3,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":8,"column":32,"nodeType":"83","messageId":"84","endLine":8,"endColumn":41},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"87","text":"88"},{"range":"89","text":"88"},{"range":"90","text":"88"},"no-unused-vars","'muscles' is assigned a value but never used.","Identifier","unusedVar","'musclesTrained' is assigned a value but never used.",{"range":"91","text":"88"},{"range":"92","text":"88"},"'variables' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0]]